install.packages("reticulate")
library(reticulate)
py_run_file('pred_for_r.py')
py_run_file('pred_for_r.py')
pix_list <- py_run_file('pred_for_r.py')
pix_list[0]
py$pix_list
py_run_file('pred_for_r.py')
py$pix_list
source_python('pred_for_r.py')
pred('out.png')
get_list('out.png')
library(httr)
library(jsonlite)
url <- "https://vip.domino.tech:443/models/5da9d5f546e0fb00078ede96/latest/model"
response <- POST(
url,
authenticate("YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", "YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", type = "basic"),
body=toJSON(list(data=list(input_array = get_list('out.png'))), auto_unbox = TRUE),
content_type("application/json")
)
str(content(response))
get_list('out.png')
response <- POST(
url,
authenticate("YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", "YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", type = "basic"),
body=toJSON(list(data=list(input_array = get_list('out.png'))), auto_unbox = TRUE),
content_type("application/json")
)
str(content(response))
get_list('out.png')
?get_list('out.png')
x <- get_list('out.png')
View(x)
source_python('pred_for_r.py')
get_pred('out.png')
source_python('pred_for_r.py')
get_pred('out.png')
source_python('pred_for_r.py')
get_pred('out.png')
library(httr)
library(jsonlite)
url <- "https://vip.domino.tech:443/models/5da9d5f546e0fb00078ede96/latest/model"
response <- POST(
url,
authenticate("YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", "YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", type = "basic"),
body=toJSON(list(data=list(input_array = get_list('out.png'))), auto_unbox = TRUE),
content_type("application/json")
)
str(content(response))
source_python('pred_for_r.py')
get_list('out.png')
library(httr)
library(jsonlite)
url <- "https://vip.domino.tech:443/models/5da9d5f546e0fb00078ede96/latest/model"
response <- POST(
url,
authenticate("YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", "YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", type = "basic"),
body=toJSON(list(data=list(input_array = get_list('out.png'))), auto_unbox = TRUE),
content_type("application/json")
)
str(content(response))
source_python('pred_for_r.py')
get_list('out.png')
source_python('pred_for_r.py')
get_list('out.png')
library(httr)
library(jsonlite)
url <- "https://vip.domino.tech:443/models/5da9d5f546e0fb00078ede96/latest/model"
response <- POST(
url,
authenticate("YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", "YdjGQYtt8jBp2k4xhItQg7AP1xLRQssMxtts3MluiBIxlTtg84ytFB1yFbSsUncv", type = "basic"),
body=toJSON(list(data=list(input_array = get_list('out.png'))), auto_unbox = TRUE),
content_type("application/json")
)
str(content(response))
x <- str(content(response))
x[0]
str(content(response))[0]
str(content(response))$result
response
fromJSON(response)
fromJSON(str(content(response)))
fromJSON(content(response))
x <- content(response)
str(content(response))
x <- str(content(response))
x <- str(content(response))
str(content(response))
response
View(response)
response[1]
response[0]
response[1]
response[2]
response[3]
response[4]
response[5]
response[6]
response[7]
response[8]
response[9]
response[10]
str(content(response))
response$headers[7]
response[9]
response[8]
response[7]
response$content
response$content[1]
response$content[2]
response$content[3]
response$content[4]
response$content[5]
response$content[45]
str(content(response(result)))
response$content
str(response$content)
str(response$content)
str(content(response))
content(response)
response$result[[1]][[1]]
1+2
content(response, as=parsed)
content(response, as=text)
content(response)
content(response)$result[[1]][[1]]
content(response)$result[[1]][[1]]
content(response)$result[[1]][[2]]
content(response)$result[[2]][[1]]
content(response)$result[[2]][[2]]
content(response)$result[[3]][[1]]
content(response)$result[[3]][[2]]
preds <- c(content(response)$result[[1]][[1]], ' ', content(response)$result[[1]][[2]])
preds
preds <- paste(content(response)$result[[1]][[1]], content(response)$result[[1]][[2]], sep=' ')
preds
preds <- paste(content(response)$result[[1]][[1]], content(response)$result[[1]][[2]], sep=' - ')
preds
preds <- paste(content(response)$result[[1]][[1]], content(response)$result[[1]][[2]], sep=' : ')
preds
preds <- paste(content(response)$result[[1]][[1]], content(response)$result[[1]][[2]], sep=': ')
preds
shiny::runApp()
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
shiny::runApp()
shiny::runApp()
# NOT RUN {
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point()
p
# Use theme_set() to completely override the current theme.
# Here we have the old theme so we can later restore it.
# Note that the theme is applied when the plot is drawn, not
# when it is created.
old <- theme_set(theme_bw())
p
theme_set(old)
p
# NOT RUN {
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point()
p
# Use theme_set() to completely override the current theme.
# Here we have the old theme so we can later restore it.
# Note that the theme is applied when the plot is drawn, not
# when it is created.
old <- theme_set(theme_bw())
p
theme_set(old)
p
add_el <- theme_grey() +
theme(text = element_text(family = "Times"))
add_el$text
rep_el <- theme_grey() %+replace%
theme(text = element_text(family = "Times"))
rep_el$text
# theme_update() and theme_replace() are similar except they
# theme_update() and theme_replace() are similar except they
# apply directly to the current/active theme.
# theme_update() and theme_replace() are similar except they
# apply directly to the current/active theme.
# }
p
# theme_update() and theme_replace() are similar except they
# apply directly to the current/active theme.
# }
P
theme()
